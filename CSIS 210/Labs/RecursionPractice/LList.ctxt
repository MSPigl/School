#BlueJ class context
comment0.params=
comment0.target=LList()
comment1.params=
comment1.target=void\ clear()
comment10.params=i
comment10.target=java.lang.Object\ recursiveGetElement(int)
comment11.params=n\ i
comment11.target=java.lang.Object\ recursiveGetElement(LList.Node,\ int)
comment12.params=newEntry
comment12.target=boolean\ add(java.lang.Object)
comment13.params=newPosition\ newEntry
comment13.target=boolean\ add(int,\ java.lang.Object)
comment14.params=
comment14.target=void\ display()
comment15.params=
comment15.target=boolean\ isEmpty()
comment16.params=givenPosition\ newEntry
comment16.target=boolean\ replace(int,\ java.lang.Object)
comment17.params=givenPosition
comment17.target=java.lang.Object\ getEntry(int)
comment18.params=givenPosition
comment18.target=java.lang.Object\ remove(int)
comment19.params=
comment19.target=boolean\ isFull()
comment2.params=
comment2.target=void\ recursivePrint()
comment20.params=anEntry
comment20.target=boolean\ contains(java.lang.Object)
comment21.params=givenPosition
comment21.target=LList.Node\ getNodeAt(int)
comment21.text=\ Task\:\ Returns\ a\ reference\ to\ the\ node\ at\ a\ given\ position.\r\nPrecondition\:\ List\ is\ not\ empty;\ 1\ <\=\ givenPosition\ <\=\ length.
comment22.params=
comment22.target=int\ getLength()
comment23.params=
comment23.target=void\ reverse()
comment3.params=n
comment3.target=void\ recursivePrint(LList.Node)
comment4.params=
comment4.target=int\ recursiveCount()
comment5.params=n
comment5.target=int\ recursiveCount(LList.Node)
comment6.params=
comment6.target=void\ recursivePrintBackwards()
comment7.params=n
comment7.target=void\ recursivePrintBackwards(LList.Node)
comment8.params=value
comment8.target=boolean\ recursiveSearch(java.lang.Object)
comment9.params=n\ value
comment9.target=boolean\ recursiveSearch(LList.Node,\ java.lang.Object)
numComments=24
