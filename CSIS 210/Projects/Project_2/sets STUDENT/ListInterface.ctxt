#BlueJ class context
comment0.params=newEntry
comment0.target=boolean\ add(T)
comment0.text=Task\:\ Adds\ a\ new\ entry\ to\ the\ end\ of\ the\ list.\nEntries\ currently\ in\ the\ list\ are\ unaffected.\nThe\ lists\ size\ is\ increased\ by\ 1.\n@param\ newEntry\ the\ object\ to\ be\ added\ as\ a\ new\ entry\n@return\ true\ if\ the\ addition\ is\ successful,\ or\ false\ if\ the\ list\nis\ full\ \n
comment1.params=newPosition\ newEntry
comment1.target=boolean\ add(int,\ T)
comment1.text=Task\:\ Adds\ a\ new\ entry\ at\ a\ specified\ position\ within\ the\ list.\nEntries\ originally\ at\ and\ above\ the\ specified\ position\nare\ at\ the\ next\ higher\ position\ within\ the\ list.\nThe\ lists\ size\ is\ increased\ by\ 1.\n@param\ newPosition\ an\ integer\ that\ specifies\ the\ desired\nposition\ of\ the\ new\ entry\n@param\ newEntry\ the\ object\ to\ be\ added\ as\ a\ new\ entry\n@return\ true\ if\ the\ addition\ is\ successful,\ or\nfalse\ if\ either\ the\ list\ is\ full,\ newPosition\ <\ 1,\ or\nnewPosition\ >\ getLength()+1\ \n
comment10.target=boolean\ isFull()
comment10.text=Task\:\ Sees\ whether\ the\ list\ is\ full.\n@return\ true\ if\ the\ list\ is\ full,\ or\ false\ if\ not\ \n
comment11.target=void\ display()
comment11.text=Task\:\ Displays\ all\ entries\ that\ are\ in\ the\ list,\ one\ per\ line,\nin\ the\ order\ in\ which\ they\ occur\ in\ the\ list.\ \n
comment2.params=givenPosition
comment2.target=T\ remove(int)
comment2.text=Task\:\ Removes\ the\ entry\ at\ a\ given\ position\ from\ the\ list.\nEntries\ originally\ at\ positions\ higher\ than\ the\ given\nposition\ are\ at\ the\ next\ lower\ position\ within\ the\ list,\nand\ the\ lists\ size\ is\ decreased\ by\ 1.\n@param\ givenPosition\ an\ integer\ that\ indicates\ the\ position\ of\nthe\ entry\ to\ be\ removed\n@return\ a\ reference\ to\ the\ removed\ entry\ or\ null,\ if\ either\nthe\ list\ was\ empty,\ givenPosition\ <\ 1,\ or\ngivenPosition\ >\ getLength()\ \n
comment3.target=void\ clear()
comment3.text=Task\:\ Removes\ all\ entries\ from\ the\ list.\ \n
comment4.params=givenPosition\ newEntry
comment4.target=boolean\ replace(int,\ T)
comment4.text=Task\:\ Replaces\ the\ entry\ at\ a\ given\ position\ in\ the\ list.\n@param\ givenPosition\ an\ integer\ that\ indicates\ the\ position\ of\ the\nentry\ to\ be\ replaced\n@param\ newEntry\ the\ object\ that\ will\ replace\ the\ entry\ at\ the\nposition\ givenPosition\n@return\ true\ if\ the\ replacement\ occurs,\ or\ false\ if\ either\ the\nlist\ is\ empty,\ givenPosition\ <\ 1,\ or\ngivenPosition\ >\ getLength()\ \n
comment5.params=givenPosition
comment5.target=T\ getEntry(int)
comment5.text=Task\:\ Retrieves\ the\ entry\ at\ a\ given\ position\ in\ the\ list.\n@param\ givenPosition\ an\ integer\ that\ indicates\ the\ position\ of\nthe\ desired\ entry\n@return\ a\ reference\ to\ the\ indicated\ entry\ or\ null,\ if\ either\nthe\ list\ is\ empty,\ givenPosition\ <\ 1,\ or\ngivenPosition\ >\ getLength()\ \n
comment6.target=void\ reverse()
comment6.text=Task\:\ Reverses\ the\ order\ of\ the\ items\ in\ the\ list.\ \n
comment7.params=anEntry
comment7.target=boolean\ contains(T)
comment7.text=Task\:\ Sees\ whether\ the\ list\ contains\ a\ given\ entry.\n@param\ anEntry\ the\ object\ that\ is\ the\ desired\ entry\n@return\ true\ if\ the\ list\ contains\ anEntry,\ or\ false\ if\ not\ \n
comment8.target=int\ getLength()
comment8.text=Task\:\ Gets\ the\ length\ of\ the\ list.\n@return\ the\ integer\ number\ of\ entries\ currently\ in\ the\ list\ \n
comment9.target=boolean\ isEmpty()
comment9.text=Task\:\ Sees\ whether\ the\ list\ is\ empty.\n@return\ true\ if\ the\ list\ is\ empty,\ or\ false\ if\ not\ \n
numComments=12
